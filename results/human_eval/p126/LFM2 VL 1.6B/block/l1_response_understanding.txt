### Algorithm Overview

The algorithm is designed to verify if a list of integers is sorted in ascending order. It takes a list of integers as input and returns `True` if the list is sorted, and `False` otherwise.

### Input Data

- **List of integers**: The input is a list of integers that may or may not be sorted.

### Main Logical Flow

1. **Check if the list is sorted in ascending order**:
   - **Decision**: Is the list sorted in ascending order?
   - **Function Call**: `is_sorted_ascending(list)`
     - **Description**: This function checks if the list is sorted in ascending order. It iterates through the list and compares each element with its predecessor. If any pair of elements is out of order, the function returns `False`. If all pairs are in order, it returns `True`.

2. **Check if the list has no more than one duplicate of the same number**:
   - **Decision**: Does the list contain any duplicate numbers?
   - **Function Call**: `has_duplicates(list)`
     - **Description**: This function checks for duplicate numbers in the list. It iterates through the list and uses a set to keep track of unique numbers. If the size of the set is greater than 1, it returns `True`. If the size is 1 or less, it returns `False`.

3. **Return True if both conditions are satisfied**:
   - **Decision**: Are both conditions met?
   - **Function Call**: `return is_sorted_ascending(list) and not has_duplicates(list)`
     - **Description**: This final step combines the results of the two previous checks. If both conditions are true, the function returns `True`, indicating that the list is sorted in ascending order and does not contain duplicate numbers. If either condition is false, the function returns `False`.

### Expected Output

- **True**: If the list is sorted in ascending order and does not contain duplicate numbers.
- **False**: If the list is not sorted in ascending order or contains duplicate numbers.

### Implementation

```python
def is_sorted_ascending(lst):
    for i in range(len(lst) - 1):
        if lst[i] > lst[i + 1]:
            return False
    return True

def has