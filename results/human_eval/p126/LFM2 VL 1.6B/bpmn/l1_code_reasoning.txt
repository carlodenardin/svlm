```python
def is_sorted_and_no_more_than_one_duplicate(nums):
    # Step 2: Receive a list of integers (nums)

    # Quick edge case: empty or single-element lists are sorted and have no duplicates
    if len(nums) <= 1:
        return True

    # Step 3: Check if the list is sorted (non-decreasing)
    for i in range(1, len(nums)):
        if nums[i] < nums[i - 1]:
            return False

    # Step 3b: If sorted, check for no more than one duplicate of the same number
    # i.e., no value should appear more than twice
    count = 1  # frequency of the current value
    for i in range(1, len(nums)):
        if nums[i] == nums[i - 1]:
            count += 1
            if count > 2:
                return False
        else:
            count = 1

    return True
```