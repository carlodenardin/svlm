**Algorithm Overview**
======================

### Purpose
The algorithm is designed to calculate the product of numbers from 1 to `n` if `n` is even, or the sum of numbers from 1 to `n` if `n` is odd.

### Input Data
* `n`: An integer representing the upper limit of the range of numbers to be calculated.

### Main Logical Flow
#### Step 1: Input `n` as an integer
* Initialize the result list and the counter.

#### Step 2: Check if `n` is even
* If `i <= n`, proceed to the next step.
* If `n` is odd, calculate the sum of numbers from 1 to `n`.

#### Step 3: Calculate the product of numbers from 1 to `n` if `n` is even
* If `i` is even, calculate the product of numbers from 1 to `i`.
* Otherwise, calculate the sum of numbers from 1 to `i`.

#### Step 4: Add the calculated value to the result list and increment the counter
* Add the calculated value to the result list and increment the counter.

#### Step 5: Return the result
* Return the final result.

### Expected Output
The algorithm calculates the product of numbers from 1 to `n` if `n` is even, or the sum of numbers from 1 to `n` if `n` is odd.

### Implementation
```python
def calculate_product(n):
    """
    Calculate the product of numbers from 1 to n if n is even, or the sum of numbers from 1 to n if n is odd.

    Args:
        n (int): The upper limit of the range of numbers to be calculated.

    Returns:
        int: The product of numbers from 1 to n if n is even, or the sum of numbers from 1 to n if n is odd.
    """
    result = 1
    counter = 0
    for i in range(1, n + 1):
        if i % 2 == 0:
            result *= i
        else:
            result += i
        counter += 1
    return result

# Example usage:
n = 5
result = calculate_product(n)
print(f"The product of numbers from 1 to {n} is: {result}")
```
This implementation follows the algorithm's steps, using a loop to calculate the product or sum of numbers