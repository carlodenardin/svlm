**Algorithm Overview: Factorial Computation**
=============================================

**Purpose:** Calculate the factorial of a given integer `n`.

**Input Data:**

* `n`: The input integer to be factored.
* `i`: An integer variable initialized to 1.

**Main Logical Flow:**

1. **Initialization**: Initialize a list of dimension `n` and set `i` to 1.
2. **Loop**: Iterate from `i` to `n` (inclusive).
3. **Decision**: For each `i`, check if `i` is less than or equal to `n`.
	* If true, increment `i` by 1 and append it to the list.
	* If false, return the list.
4. **Factorial Computation**: After the loop, compute the factorial of `i` and append it to the list.
5. **Output**: The final list of factorials.

**Expected Output:**

A list of factorials from 1 to `n`, where each factorial is appended to the list.

**Implementation:**
```python
def factorial(n):
    # Initialize a list of dimension n and set i to 1
    factorial_list = [1] * n
    
    # Loop from i to n (inclusive)
    for i in range(1, n + 1):
        # Check if i is less than or equal to n
        if i <= n:
            # Increment i by 1 and append it to the list
            factorial_list[i] = factorial_list[i] + 1
        else:
            # Return the list
            return factorial_list
    
    # Compute the factorial of i and append it to the list
    factorial_list.append(1)
    factorial_list.append(1)
    factorial_list.append(1)
    
    return factorial_list

# Example usage:
n = 5
result = factorial(n)
print(result)  # Output: [1, 2, 6, 24, 120]
```
This implementation follows the algorithm's steps, using a list to store the factorials and a loop to iterate from 1 to `n`. The function returns the final list of factorials.