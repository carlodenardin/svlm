**Algorithm Overview:**
This algorithm finds the largest `k` elements from a given list of integers.

---

**Input Data Required:**
- A list of integers, e.g., `[3, 5, 1, 9, 7]`
- An integer value `k`, representing how many of the largest elements to retrieve

---

**Main Logical Flow:**

1. **Input Reception:**  
   Start by receiving a list of integers and an integer `k`.

2. **Sorting:**  
   Sort the input list in ascending order (smallest to largest).

3. **Selecting Elements:**  
   Select and return the last `k` elements from the sorted list (these will be the largest because the list is sorted in ascending order).

---

**Step-by-Step Implementation Outline:**

1. **Function Definition:**  
   ```python
   def find_largest_k_elements(lst, k):
   ```
   
2. **Sort the list:**
   ```python
   sorted_lst = sorted(lst)
   ```
   
3. **Return the last k elements:**
   ```python
   return sorted_lst[-k:]
   ```

---

**Expected Output:**
- A list containing the largest `k` integers from the input list, in ascending order.

**Example:**
```python
lst = [3, 5, 1, 9, 7]
k = 3
print(find_largest_k_elements(lst, k))   # Output: [5, 7, 9]
```

---

**Summary Table:**

| Step         | Action                              |
|--------------|-------------------------------------|
| Input        | List of integers, integer k         |
| Sort         | In ascending order                  |
| Output       | Last k elements of sorted list      |