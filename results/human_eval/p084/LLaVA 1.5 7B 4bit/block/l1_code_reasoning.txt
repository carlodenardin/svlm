```python
from dataclasses import dataclass
from typing import List

@dataclass
class Task:
    name: str
    status: str

def display_tasks(tasks: List[Task]) -> None:
    if not tasks:
        print("No tasks.")
        return
    for idx, t in enumerate(tasks, start=1):
        print(f"{idx}. {t.name} - {t.status}")

def add_task(tasks: List[Task]) -> None:
    name = input("Enter task name: ").strip()
    if not name:
        print("Task name cannot be empty.")
        return
    # Status defaults to "New" when adding a task
    tasks.append(Task(name=name, status="New"))

def edit_task(tasks: List[Task]) -> None:
    if not tasks:
        print("No tasks to edit.")
        return
    display_tasks(tasks)
    try:
        i = int(input("Enter task number to edit: "))
        if i < 1 or i > len(tasks):
            print("Invalid task number.")
            return
    except ValueError:
        print("Invalid input.")
        return
    t = tasks[i - 1]
    new_name = input(f"Enter new name (leave blank to keep '{t.name}'): ").strip()
    new_status = input(f"Enter new status (leave blank to keep '{t.status}'): ").strip()
    if new_name:
        t.name = new_name
    if new_status:
        t.status = new_status

def remove_task(tasks: List[Task]) -> None:
    if not tasks:
        print("No tasks to remove.")
        return
    display_tasks(tasks)
    try:
        i = int(input("Enter task number to remove: "))
        if i < 1 or i > len(tasks):
            print("Invalid task number.")
            return
    except ValueError:
        print("Invalid input.")
        return
    removed = tasks.pop(i - 1)
    print(f"Removed '{removed.name}'.")

def run_task_manager() -> None:
    tasks: List[Task] = []
    while True:
        print("\nCurrent tasks:")
        display_tasks(tasks)
        print("\nOptions: [A]dd  [E]dit  [R]emove  [Q]uit")
        choice = input("Choose an option: ").strip().lower()
        if choice == 'a':
            add_task(tasks)
        elif choice == 'e':
            edit_task(tasks)
        elif choice == 'r':
            remove_task(tasks)
        elif choice == 'q':
            print("Exiting.")
            break
        else:
            print("Invalid option. Please choose A, E, R, or Q.")

if __name__ == "__main__":
    run_task_manager()
```