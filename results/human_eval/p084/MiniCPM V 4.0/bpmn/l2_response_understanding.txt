The flowchart outlines an algorithm designed to compute the sum of digits of an integer and convert that sum into binary format. Here's a step-by-step description:

1. **Receive an integer number**: The process begins by receiving an integer input from the user or system.
2. **Initialize two variables**: Set up two initial variables, `sum` with a value of 0, and `res` as an empty string.
3. **Compute and allocate in the sum variable the sum of the digits of the number**: Iterate through each digit of the received integer. For each iteration, extract the last digit using modulo operation (`number % 10`), add it to `sum`, and then remove the last digit from the number using integer division (`number // 10`).
4. **Convert the sum to binary and save it in the res variable**: Once the loop completes, convert the accumulated `sum` into its binary representation and store this result in the `res` variable.
5. **Return the res variable**: Finally, return the binary string stored in the `res` variable as the output of the algorithm.

This straightforward approach ensures that the sum of the digits is correctly computed and subsequently converted into binary form for further use or display.