**Algorithm Overview**
======================

**Purpose:** The algorithm is designed to generate a tuple of even and odd numbers based on the input integer.

**Input Data:**
- An integer input value.

**Main Logical Flow:**
### Step 1: Initialize an Even and Odd Counter Variable
- Set the counter variable to 0.
- Return the initial value.

### Step 2: Iterate Over the Digits
- Initialize a loop that iterates over each digit in the input integer.
- For each digit, increment the counter variable by 1.
- Return the final value of the counter variable.

### Step 3: Return a Tuple (Even, Odd)
- Return a tuple containing the final value of the counter variable and the original input integer.

**Expected Output:**
- A tuple containing the even and odd numbers generated based on the input integer.

**Implementation:**
```python
def generate_even_odd_numbers(input_int):
    """
    Generate a tuple of even and odd numbers based on the input integer.

    Args:
        input_int (int): The input integer.

    Returns:
        tuple: A tuple containing the even and odd numbers.
    """
    # Initialize an even and odd counter variable
    even_count = 0

    # Iterate over the digits and increment the counter
    for digit in str(input_int):
        if int(digit) % 2 == 0:
            even_count += 1

    # Return the final value of the counter variable and the original input integer
    return even_count, int(input_int)

# Example usage
input_int = 123
even_count, odd_count = generate_even_odd_numbers(input_int)
print(f"Even numbers: {even_count}, Odd numbers: {odd_count}")
```
This implementation follows the algorithm's steps, generating a tuple of even and odd numbers based on the input integer.