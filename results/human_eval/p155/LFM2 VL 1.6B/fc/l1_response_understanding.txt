### Algorithm Overview

The algorithm is designed to count the number of even and odd digits in a given integer. It takes an integer as input and outputs the count of even and odd digits.

### Input Data

- **Input**: An integer (n)

### Main Logical Flow

1. **Start**: Begin the process.
2. **Count Even Digits**:
   - Initialize a variable `even_count` to 0.
   - Iterate through each digit of the integer `n`:
     - Convert the digit to an integer.
     - Check if the digit is even (i.e., `digit % 2 == 0`).
     - If the digit is even, increment `even_count` by 1.
3. **Count Odd Digits**:
   - Initialize a variable `odd_count` to 0.
   - Iterate through each digit of the integer `n`:
     - Convert the digit to an integer.
     - Check if the digit is odd (i.e., `digit % 2!= 0`).
     - If the digit is odd, increment `odd_count` by 1.
4. **End**: End the process.

### Expected Output

- **Output**: A tuple containing the count of even digits and the count of odd digits.

### Example

**Input**: 12345
**Output**: (5, 0)

**Explanation**:
- Digits: 1, 2, 3, 4, 5
- Even digits: 2, 4 (count: 2)
- Odd digits: 1, 3, 5 (count: 3)