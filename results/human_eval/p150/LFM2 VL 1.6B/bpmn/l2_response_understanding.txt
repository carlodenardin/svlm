### Algorithm Overview

The algorithm is designed to find the greatest common divisor (GCD) of two integers, `n` and `x`, using the Euclidean algorithm. The Euclidean algorithm is an efficient method for computing the GCD of two numbers, based on the principle that the GCD of `n` and `x` is the same as the GCD of `x` and the remainder of `n` divided by `x`.

### Input Data

The algorithm requires two integers as input:
- `n`: The first integer.
- `x`: The second integer.

### Main Logical Flow

1. **Input Validation**:
   - The algorithm first checks if the inputs `n` and `x` are non-negative integers. If either is negative, the algorithm returns an error message indicating that the inputs must be non-negative.

2. **Euclidean Algorithm**:
   - The algorithm then enters a loop that continues until `x` becomes zero.
   - Inside the loop, the algorithm calculates the remainder of `n` divided by `x` and updates `n` to `x` and `x` to the remainder.
   - This process is repeated until `x` is zero, at which point the algorithm returns the current value of `n`, which is the GCD of the original `n` and `x`.

3. **Output**:
   - The final value of `n` is returned as the output of the algorithm.

### Expected Output

The expected output of the algorithm is the greatest common divisor of the two input integers `n` and `x`.

### Implementation Steps

1. **Input Validation**:
   - Check if `n` and `x` are non-negative integers.
   - If not, return an error message.

2. **Initialize Variables**:
   - Set `n` to the value of the first input.
   - Set `x` to the value of the second input.

3. **Euclidean Algorithm**:
   - While `x` is not zero:
     - Calculate the remainder of `n` divided by `x`.
     - Update `n` to `x` and `x` to the remainder.
   - Return the current value of `n`.

4. **Output**:
   - Return the final value of `n` as the GCD.

### Pseudocode

```
function gcd(n, x):
