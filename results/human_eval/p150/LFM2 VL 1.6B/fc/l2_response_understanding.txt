### Algorithm Overview

The algorithm is designed to find the greatest common divisor (GCD) of two integers, `n` and `y`. It uses the Euclidean algorithm, which repeatedly applies the division algorithm to find the GCD of `n` and `y`. The algorithm terminates when `y` becomes 0, at which point `n` is the GCD.

### Input Data

The algorithm requires two integer inputs, `n` and `y`, representing the numbers for which the GCD needs to be calculated.

### Main Logical Flow

1. **Start**: The algorithm begins.
2. **Input n, y**: The inputs `n` and `y` are taken as arguments.
3. **Check divisors of n**: The algorithm checks if `n` is divisible by 2. If it is, it divides `n` by 2 and assigns the quotient to `y`. If not, it assigns the quotient to `y` and checks if it is divisible by 2.
4. **Check divisors of n**: The algorithm checks if `n` is divisible by 3. If it is, it divides `n` by 3 and assigns the quotient to `y`. If not, it assigns the quotient to `y` and checks if it is divisible by 3.
5. **Check divisors of n**: The algorithm checks if `n` is divisible by 5. If it is, it divides `n` by 5 and assigns the quotient to `y`. If not, it assigns the quotient to `y` and checks if it is divisible by 5.
6. **Check divisors of n**: The algorithm checks if `n` is divisible by 7. If it is, it divides `n` by 7 and assigns the quotient to `y`. If not, it assigns the quotient to `y` and checks if it is divisible by 7.
7. **Check divisors of n**: The algorithm checks if `n` is divisible by 11. If it is, it divides `n` by 11 and assigns the quotient to `y`. If not, it assigns the quotient to `y` and checks if it is divisible by 11.
8. **Check divisors of n**: The